{
    "module": {
        "heading": "Modules",
        "doclets": [
            {
                "meta": {
                    "range": [
                        374,
                        495
                    ],
                    "filename": "Component.js",
                    "lineno": 18,
                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                    "code": {}
                },
                "longname": "module:Component",
                "name": "Component",
                "doclets": [
                    {
                        "meta": {
                            "range": [
                                524,
                                1887
                            ],
                            "filename": "Component.js",
                            "lineno": 27,
                            "path": "/Users/allanhortle/localhost/code/fronads/src",
                            "code": {
                                "id": "astnode100000058",
                                "name": "Component",
                                "type": "ClassDeclaration",
                                "paramnames": [
                                    "value"
                                ]
                            }
                        },
                        "params": [
                            {
                                "type": {
                                    "names": [
                                        "*"
                                    ]
                                },
                                "description": "<p>The value to store</p>",
                                "name": "value"
                            }
                        ],
                        "longname": "module:Component~Component",
                        "classdesc": "<p>Component class</p>",
                        "name": "Component",
                        "doclets": [
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "Component"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        819,
                                        922
                                    ],
                                    "filename": "Component.js",
                                    "lineno": 44,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000072",
                                        "name": "Component#unit",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "value",
                                            "props"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "any"
                                            ]
                                        },
                                        "name": "value"
                                    }
                                ],
                                "longname": "module:Component~Component#unit",
                                "name": "unit",
                                "doclets": [],
                                "memberof": "module:Component~Component",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000014",
                                "description": "<p>Unit function</p>",
                                "parentKind": "module",
                                "comment": "/**\n     * Unit function\n     * @param {any} value\n     * @return {Component}\n     */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "Some"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1070,
                                        1118
                                    ],
                                    "filename": "Component.js",
                                    "lineno": 54,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000089",
                                        "name": "Component#flatMap",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "fn"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "function"
                                            ]
                                        },
                                        "description": "<p>perform a flatMap</p>",
                                        "name": "fn"
                                    }
                                ],
                                "longname": "module:Component~Component#flatMap",
                                "name": "flatMap",
                                "doclets": [],
                                "memberof": "module:Component~Component",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000015",
                                "description": "<p>Perform a flatMap on the current identity</p>",
                                "parentKind": "module",
                                "comment": "/**\n     * Perform a flatMap on the current identity\n     *\n     * @param {Function} fn - perform a flatMap\n     * @return {Some}\n     */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "Component"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1206,
                                        1277
                                    ],
                                    "filename": "Component.js",
                                    "lineno": 63,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000100",
                                        "name": "Component#map",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "fn"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "function"
                                            ]
                                        },
                                        "name": "fn"
                                    }
                                ],
                                "longname": "module:Component~Component#map",
                                "name": "map",
                                "doclets": [],
                                "memberof": "module:Component~Component",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000016",
                                "description": "<p>map</p>",
                                "parentKind": "module",
                                "comment": "/**\n     * map\n     * @param {Function} fn\n     * @return {Component}\n     */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "*"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1438,
                                        1531
                                    ],
                                    "filename": "Component.js",
                                    "lineno": 72,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000120",
                                        "name": "Component#value",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "defaultValue"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "*"
                                            ]
                                        },
                                        "optional": true,
                                        "defaultvalue": null,
                                        "name": "defaultValue"
                                    }
                                ],
                                "longname": "module:Component~Component#value",
                                "name": "value",
                                "doclets": [],
                                "memberof": "module:Component~Component",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000017",
                                "description": "<p>Return the identity's value. If the value is null, return <code>defaultValue</code></p>",
                                "parentKind": "module",
                                "comment": "/**\n     * Return the identity's value. If the value is null, return `defaultValue`\n     * @param {*} [defaultValue = null]\n     * @return {*}\n     */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "Either"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1624,
                                        1687
                                    ],
                                    "filename": "Component.js",
                                    "lineno": 80,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000138",
                                        "name": "Component#toEither",
                                        "type": "MethodDefinition",
                                        "paramnames": []
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [],
                                "longname": "module:Component~Component#toEither",
                                "name": "toEither",
                                "doclets": [],
                                "memberof": "module:Component~Component",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000018",
                                "description": "<p>Change the Component to a Right Either.</p>",
                                "parentKind": "module",
                                "comment": "/**\n     * Change the Component to a Right Either.\n     * @return {Either}\n     */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "Either"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1778,
                                        1838
                                    ],
                                    "filename": "Component.js",
                                    "lineno": 88,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000152",
                                        "name": "Component#toMaybe",
                                        "type": "MethodDefinition",
                                        "paramnames": []
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [],
                                "longname": "module:Component~Component#toMaybe",
                                "name": "toMaybe",
                                "doclets": [],
                                "memberof": "module:Component~Component",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000019",
                                "description": "<p>Change the Component to a Some Maybe.</p>",
                                "parentKind": "module",
                                "comment": "/**\n     * Change the Component to a Some Maybe.\n     * @return {Either}\n     */"
                            }
                        ],
                        "memberof": "module:Component",
                        "scope": "inner",
                        "kind": "class",
                        "___s": true,
                        "___id": "T000002R000011",
                        "description": "<p>Component constructor</p>",
                        "parentKind": "module",
                        "comment": "/**\n * Component class\n */"
                    }
                ],
                "kind": "module",
                "___s": true,
                "___id": "T000002R000002",
                "description": "<p>Component is a monad that has only one state that knows how to flatten\na set of props.</p>",
                "comment": "/**\n * Component is a monad that has only one state that knows how to flatten\n * a set of props.\n * @module Component\n */"
            },
            {
                "meta": {
                    "range": [
                        219,
                        340
                    ],
                    "filename": "Either.js",
                    "lineno": 13,
                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                    "code": {}
                },
                "longname": "module:Either",
                "name": "Either",
                "doclets": [
                    {
                        "meta": {
                            "range": [
                                366,
                                2399
                            ],
                            "filename": "Either.js",
                            "lineno": 21,
                            "path": "/Users/allanhortle/localhost/code/fronads/src",
                            "code": {
                                "id": "astnode100000225",
                                "name": "Either",
                                "type": "ClassDeclaration",
                                "paramnames": [
                                    "value",
                                    "isRight"
                                ]
                            }
                        },
                        "params": [
                            {
                                "type": {
                                    "names": [
                                        "any"
                                    ]
                                },
                                "name": "value"
                            },
                            {
                                "type": {
                                    "names": [
                                        "boolean"
                                    ]
                                },
                                "name": "isRight"
                            }
                        ],
                        "longname": "module:Either~Either",
                        "classdesc": "<p>Either class</p>",
                        "name": "Either",
                        "doclets": [
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "Either"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        670,
                                        718
                                    ],
                                    "filename": "Either.js",
                                    "lineno": 38,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000246",
                                        "name": "Either#unit",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "value"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "any"
                                            ]
                                        },
                                        "name": "value"
                                    }
                                ],
                                "longname": "module:Either~Either#unit",
                                "name": "unit",
                                "doclets": [],
                                "memberof": "module:Either~Either",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000033",
                                "description": "<p>Unit function</p>",
                                "parentKind": "module",
                                "comment": "/**\n     * Unit function\n     * @param {any} value\n     * @return {Either}\n     */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "Either"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        807,
                                        877
                                    ],
                                    "filename": "Either.js",
                                    "lineno": 47,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000255",
                                        "name": "Either#flatMap",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "fn"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "function"
                                            ]
                                        },
                                        "name": "fn"
                                    }
                                ],
                                "longname": "module:Either~Either#flatMap",
                                "name": "flatMap",
                                "doclets": [],
                                "memberof": "module:Either~Either",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000034",
                                "description": "<p>flatMap</p>",
                                "parentKind": "module",
                                "comment": "/**\n     * flatMap\n     * @param {Function} fn\n     * @return {Either}\n     */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "Either"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        962,
                                        1037
                                    ],
                                    "filename": "Either.js",
                                    "lineno": 56,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000271",
                                        "name": "Either#map",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "fn"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "function"
                                            ]
                                        },
                                        "name": "fn"
                                    }
                                ],
                                "longname": "module:Either~Either#map",
                                "name": "map",
                                "doclets": [],
                                "memberof": "module:Either~Either",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000035",
                                "description": "<p>map</p>",
                                "parentKind": "module",
                                "comment": "/**\n     * map\n     * @param {Function} fn\n     * @return {Either}\n     */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "Either"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1130,
                                        1204
                                    ],
                                    "filename": "Either.js",
                                    "lineno": 65,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000290",
                                        "name": "Either#leftFlatMap",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "fn"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "function"
                                            ]
                                        },
                                        "name": "fn"
                                    }
                                ],
                                "longname": "module:Either~Either#leftFlatMap",
                                "name": "leftFlatMap",
                                "doclets": [],
                                "memberof": "module:Either~Either",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000036",
                                "description": "<p>leftFlatMap</p>",
                                "parentKind": "module",
                                "comment": "/**\n     * leftFlatMap\n     * @param {Function} fn\n     * @return {Either}\n     */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "Either"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1293,
                                        1371
                                    ],
                                    "filename": "Either.js",
                                    "lineno": 74,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000306",
                                        "name": "Either#leftMap",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "fn"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "function"
                                            ]
                                        },
                                        "name": "fn"
                                    }
                                ],
                                "longname": "module:Either~Either#leftMap",
                                "name": "leftMap",
                                "doclets": [],
                                "memberof": "module:Either~Either",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000037",
                                "description": "<p>leftMap</p>",
                                "parentKind": "module",
                                "comment": "/**\n     * leftMap\n     * @param {Function} fn\n     * @return {Either}\n     */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "Either"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1463,
                                        1562
                                    ],
                                    "filename": "Either.js",
                                    "lineno": 83,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000323",
                                        "name": "Either#ap",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "eitherWithFn"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "Either"
                                            ]
                                        },
                                        "name": "eitherWithFn"
                                    }
                                ],
                                "longname": "module:Either~Either#ap",
                                "name": "ap",
                                "doclets": [],
                                "memberof": "module:Either~Either",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000038",
                                "description": "<p>ap</p>",
                                "parentKind": "module",
                                "comment": "/**\n     * ap\n     * @param {Either} eitherWithFn\n     * @return {Either}\n     */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "any"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1727,
                                        1829
                                    ],
                                    "filename": "Either.js",
                                    "lineno": 93,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000345",
                                        "name": "Either#biMap",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "leftFn",
                                            "rightFn"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "function"
                                            ]
                                        },
                                        "name": "leftFn"
                                    },
                                    {
                                        "type": {
                                            "names": [
                                                "function"
                                            ]
                                        },
                                        "name": "rightFn"
                                    }
                                ],
                                "longname": "module:Either~Either#biMap",
                                "name": "biMap",
                                "doclets": [],
                                "memberof": "module:Either~Either",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000039",
                                "description": "<p>Provide functions to map both sides of the Either</p>",
                                "parentKind": "module",
                                "comment": "/**\n     * Provide functions to map both sides of the Either\n     * @param {Function} leftFn\n     * @param {Function} rightFn\n     * @return {any}\n     */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "any"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1954,
                                        2056
                                    ],
                                    "filename": "Either.js",
                                    "lineno": 103,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000366",
                                        "name": "Either#biFlatMap",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "leftFn",
                                            "rightFn"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "function"
                                            ]
                                        },
                                        "name": "leftFn"
                                    },
                                    {
                                        "type": {
                                            "names": [
                                                "function"
                                            ]
                                        },
                                        "name": "rightFn"
                                    }
                                ],
                                "longname": "module:Either~Either#biFlatMap",
                                "name": "biFlatMap",
                                "doclets": [],
                                "memberof": "module:Either~Either",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000040",
                                "description": "<p>biFlatMap</p>",
                                "parentKind": "module",
                                "comment": "/**\n     * biFlatMap\n     * @param {Function} leftFn\n     * @param {Function} rightFn\n     * @return {any}\n     */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "any"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        2132,
                                        2172
                                    ],
                                    "filename": "Either.js",
                                    "lineno": 111,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000387",
                                        "name": "Either#value",
                                        "type": "MethodDefinition",
                                        "paramnames": []
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [],
                                "longname": "module:Either~Either#value",
                                "name": "value",
                                "doclets": [],
                                "memberof": "module:Either~Either",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000041",
                                "description": "<p>Return the current value.</p>",
                                "parentKind": "module",
                                "comment": "/**\n     * Return the current value.\n     * @return {any}\n     */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "Maybe"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        2232,
                                        2328
                                    ],
                                    "filename": "Either.js",
                                    "lineno": 119,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000395",
                                        "name": "Either#toMaybe",
                                        "type": "MethodDefinition",
                                        "paramnames": []
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [],
                                "longname": "module:Either~Either#toMaybe",
                                "name": "toMaybe",
                                "doclets": [],
                                "memberof": "module:Either~Either",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000042",
                                "description": "<p>toMaybe</p>",
                                "parentKind": "module",
                                "comment": "/**\n     * toMaybe\n     * @return {Maybe}\n     */"
                            }
                        ],
                        "memberof": "module:Either",
                        "scope": "inner",
                        "kind": "class",
                        "___s": true,
                        "___id": "T000002R000029",
                        "parentKind": "module",
                        "comment": "/**\n * Either class\n */"
                    },
                    {
                        "returns": [
                            {
                                "type": {
                                    "names": [
                                        "Either"
                                    ]
                                }
                            }
                        ],
                        "meta": {
                            "range": [
                                2571,
                                2635
                            ],
                            "filename": "Either.js",
                            "lineno": 137,
                            "path": "/Users/allanhortle/localhost/code/fronads/src",
                            "code": {
                                "id": "astnode100000442",
                                "name": "Right",
                                "type": "FunctionDeclaration",
                                "paramnames": [
                                    "value"
                                ]
                            }
                        },
                        "params": [
                            {
                                "type": {
                                    "names": [
                                        "any"
                                    ]
                                },
                                "name": "value"
                            }
                        ],
                        "longname": "module:Either~Right",
                        "name": "Right",
                        "doclets": [],
                        "memberof": "module:Either",
                        "scope": "inner",
                        "kind": "function",
                        "___s": true,
                        "___id": "T000002R000045",
                        "description": "<p>Create an Either as a Right value</p>",
                        "parentKind": "module",
                        "comment": "/**\n * Create an Either as a Right value\n * @param {any} value\n * @return {Either}\n */"
                    },
                    {
                        "returns": [
                            {
                                "type": {
                                    "names": [
                                        "Either"
                                    ]
                                }
                            }
                        ],
                        "meta": {
                            "range": [
                                2723,
                                2787
                            ],
                            "filename": "Either.js",
                            "lineno": 146,
                            "path": "/Users/allanhortle/localhost/code/fronads/src",
                            "code": {
                                "id": "astnode100000451",
                                "name": "Left",
                                "type": "FunctionDeclaration",
                                "paramnames": [
                                    "value"
                                ]
                            }
                        },
                        "params": [
                            {
                                "type": {
                                    "names": [
                                        "any"
                                    ]
                                },
                                "name": "value"
                            }
                        ],
                        "longname": "module:Either~Left",
                        "name": "Left",
                        "doclets": [],
                        "memberof": "module:Either",
                        "scope": "inner",
                        "kind": "function",
                        "___s": true,
                        "___id": "T000002R000046",
                        "description": "<p>Create an Either as a Left value</p>",
                        "parentKind": "module",
                        "comment": "/**\n * Create an Either as a Left value\n * @param {any} value\n * @return {Either}\n */"
                    },
                    {
                        "returns": [
                            {
                                "type": {
                                    "names": [
                                        "Either"
                                    ]
                                }
                            }
                        ],
                        "meta": {
                            "range": [
                                3010,
                                3133
                            ],
                            "filename": "Either.js",
                            "lineno": 157,
                            "path": "/Users/allanhortle/localhost/code/fronads/src",
                            "code": {
                                "id": "astnode100000460",
                                "name": "Try",
                                "type": "FunctionDeclaration",
                                "paramnames": [
                                    "func"
                                ]
                            }
                        },
                        "params": [
                            {
                                "type": {
                                    "names": [
                                        "function"
                                    ]
                                },
                                "name": "func"
                            }
                        ],
                        "longname": "module:Either~Try",
                        "name": "Try",
                        "doclets": [],
                        "memberof": "module:Either",
                        "scope": "inner",
                        "kind": "function",
                        "___s": true,
                        "___id": "T000002R000047",
                        "description": "<p>Create a Try Either. <code>func</code> is immediately exceuted,\nif an error is thrown the Either will be Left(error) otherwise\nthe value of <code>func</code> is passed to a Right.</p>",
                        "parentKind": "module",
                        "comment": "/**\n * Create a Try Either. `func` is immediately exceuted,\n * if an error is thrown the Either will be Left(error) otherwise\n * the value of `func` is passed to a Right.\n * @param {Function} func\n * @return {Either}\n */"
                    }
                ],
                "kind": "module",
                "___s": true,
                "___id": "T000002R000022",
                "description": "<p>Either is monad that can hold a value of type <code>Left</code> or <code>Right</code>, but never at the same time.</p>",
                "comment": "/**\n * Either is monad that can hold a value of type `Left` or `Right`, but never at the same time.\n * @module Either\n */"
            },
            {
                "meta": {
                    "range": [
                        196,
                        397
                    ],
                    "filename": "Identity.js",
                    "lineno": 12,
                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                    "code": {}
                },
                "longname": "module:Identity",
                "name": "Identity",
                "doclets": [
                    {
                        "meta": {
                            "range": [
                                425,
                                1740
                            ],
                            "filename": "Identity.js",
                            "lineno": 22,
                            "path": "/Users/allanhortle/localhost/code/fronads/src",
                            "code": {
                                "id": "astnode100000509",
                                "name": "Identity",
                                "type": "ClassDeclaration",
                                "paramnames": [
                                    "value"
                                ]
                            }
                        },
                        "params": [
                            {
                                "type": {
                                    "names": [
                                        "*"
                                    ]
                                },
                                "description": "<p>The value to store</p>",
                                "name": "value"
                            }
                        ],
                        "longname": "module:Identity~Identity",
                        "classdesc": "<p>Identity class</p>",
                        "name": "Identity",
                        "doclets": [
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "Identity"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        716,
                                        774
                                    ],
                                    "filename": "Identity.js",
                                    "lineno": 39,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000523",
                                        "name": "Identity#unit",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "value"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "any"
                                            ]
                                        },
                                        "name": "value"
                                    }
                                ],
                                "longname": "module:Identity~Identity#unit",
                                "name": "unit",
                                "doclets": [],
                                "memberof": "module:Identity~Identity",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000056",
                                "description": "<p>Unit function</p>",
                                "parentKind": "module",
                                "comment": "/**\n     * Unit function\n     * @param {any} value\n     * @return {Identity}\n     */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "Some"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        922,
                                        970
                                    ],
                                    "filename": "Identity.js",
                                    "lineno": 49,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000532",
                                        "name": "Identity#flatMap",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "fn"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "function"
                                            ]
                                        },
                                        "description": "<p>perform a flatMap</p>",
                                        "name": "fn"
                                    }
                                ],
                                "longname": "module:Identity~Identity#flatMap",
                                "name": "flatMap",
                                "doclets": [],
                                "memberof": "module:Identity~Identity",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000057",
                                "description": "<p>Perform a flatMap on the current identity</p>",
                                "parentKind": "module",
                                "comment": "/**\n     * Perform a flatMap on the current identity\n     *\n     * @param {Function} fn - perform a flatMap\n     * @return {Some}\n     */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "Identity"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1057,
                                        1132
                                    ],
                                    "filename": "Identity.js",
                                    "lineno": 58,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000543",
                                        "name": "Identity#map",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "fn"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "function"
                                            ]
                                        },
                                        "name": "fn"
                                    }
                                ],
                                "longname": "module:Identity~Identity#map",
                                "name": "map",
                                "doclets": [],
                                "memberof": "module:Identity~Identity",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000058",
                                "description": "<p>map</p>",
                                "parentKind": "module",
                                "comment": "/**\n     * map\n     * @param {Function} fn\n     * @return {Identity}\n     */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "*"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1293,
                                        1386
                                    ],
                                    "filename": "Identity.js",
                                    "lineno": 67,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000562",
                                        "name": "Identity#value",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "defaultValue"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "*"
                                            ]
                                        },
                                        "optional": true,
                                        "defaultvalue": null,
                                        "name": "defaultValue"
                                    }
                                ],
                                "longname": "module:Identity~Identity#value",
                                "name": "value",
                                "doclets": [],
                                "memberof": "module:Identity~Identity",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000059",
                                "description": "<p>Return the identity's value. If the value is null, return <code>defaultValue</code></p>",
                                "parentKind": "module",
                                "comment": "/**\n     * Return the identity's value. If the value is null, return `defaultValue`\n     * @param {*} [defaultValue = null]\n     * @return {*}\n     */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "Either"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1478,
                                        1541
                                    ],
                                    "filename": "Identity.js",
                                    "lineno": 75,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000580",
                                        "name": "Identity#toEither",
                                        "type": "MethodDefinition",
                                        "paramnames": []
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [],
                                "longname": "module:Identity~Identity#toEither",
                                "name": "toEither",
                                "doclets": [],
                                "memberof": "module:Identity~Identity",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000060",
                                "description": "<p>Change the Identity to a Right Either.</p>",
                                "parentKind": "module",
                                "comment": "/**\n     * Change the Identity to a Right Either.\n     * @return {Either}\n     */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "Either"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1631,
                                        1691
                                    ],
                                    "filename": "Identity.js",
                                    "lineno": 83,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000594",
                                        "name": "Identity#toMaybe",
                                        "type": "MethodDefinition",
                                        "paramnames": []
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [],
                                "longname": "module:Identity~Identity#toMaybe",
                                "name": "toMaybe",
                                "doclets": [],
                                "memberof": "module:Identity~Identity",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000061",
                                "description": "<p>Change the Identity to a Some Maybe.</p>",
                                "parentKind": "module",
                                "comment": "/**\n     * Change the Identity to a Some Maybe.\n     * @return {Either}\n     */"
                            }
                        ],
                        "memberof": "module:Identity",
                        "scope": "inner",
                        "kind": "class",
                        "___s": true,
                        "___id": "T000002R000053",
                        "description": "<p>Identity constructor</p>",
                        "parentKind": "module",
                        "comment": "/**\n * Identity class\n */"
                    }
                ],
                "kind": "module",
                "___s": true,
                "___id": "T000002R000048",
                "description": "<p>Identity is a monad that has only one state. It has all the monad operations but\nwill always return the same state type.\nIt is useful as a way to compose functions.</p>",
                "comment": "/**\n * Identity is a monad that has only one state. It has all the monad operations but\n * will always return the same state type.\n * It is useful as a way to compose functions.\n * @module Identity\n */"
            },
            {
                "meta": {
                    "range": [
                        371,
                        540
                    ],
                    "filename": "Maybe.js",
                    "lineno": 17,
                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                    "code": {}
                },
                "longname": "module:Maybe",
                "name": "Maybe",
                "doclets": [
                    {
                        "meta": {
                            "range": [
                                565,
                                2121
                            ],
                            "filename": "Maybe.js",
                            "lineno": 27,
                            "path": "/Users/allanhortle/localhost/code/fronads/src",
                            "code": {
                                "id": "astnode100000688",
                                "name": "Maybe",
                                "type": "ClassDeclaration",
                                "paramnames": [
                                    "value",
                                    "isSome"
                                ]
                            }
                        },
                        "params": [
                            {
                                "type": {
                                    "names": [
                                        "*"
                                    ]
                                },
                                "description": "<p>The value to store</p>",
                                "name": "value"
                            },
                            {
                                "type": {
                                    "names": [
                                        "boolean"
                                    ]
                                },
                                "description": "<p>Whether or not the maybe is <code>some</code> or <code>none</code></p>",
                                "name": "isSome"
                            }
                        ],
                        "longname": "module:Maybe~Maybe",
                        "classdesc": "<p>Maybe class</p>",
                        "name": "Maybe",
                        "doclets": [
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "Either"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        961,
                                        1008
                                    ],
                                    "filename": "Maybe.js",
                                    "lineno": 46,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000709",
                                        "name": "Maybe#unit",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "value"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "any"
                                            ]
                                        },
                                        "name": "value"
                                    }
                                ],
                                "longname": "module:Maybe~Maybe#unit",
                                "name": "unit",
                                "doclets": [],
                                "memberof": "module:Maybe~Maybe",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000078",
                                "description": "<p>Unit function</p>",
                                "parentKind": "module",
                                "comment": "/**\n     * Unit function\n     * @param {any} value\n     * @return {Either}\n     */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "Some"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1161,
                                        1230
                                    ],
                                    "filename": "Maybe.js",
                                    "lineno": 56,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000718",
                                        "name": "Maybe#flatMap",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "fn"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "function"
                                            ]
                                        },
                                        "description": "<p>perform a flatMap if Some</p>",
                                        "name": "fn"
                                    }
                                ],
                                "longname": "module:Maybe~Maybe#flatMap",
                                "name": "flatMap",
                                "doclets": [],
                                "memberof": "module:Maybe~Maybe",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000079",
                                "description": "<p>Perform a flatMap on the current maybe</p>",
                                "parentKind": "module",
                                "comment": "/**\n     * Perform a flatMap on the current maybe\n     *\n     * @param {Function} fn - perform a flatMap if Some\n     * @return {Some}\n     */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "Maybe"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1314,
                                        1389
                                    ],
                                    "filename": "Maybe.js",
                                    "lineno": 65,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000734",
                                        "name": "Maybe#map",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "fn"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "function"
                                            ]
                                        },
                                        "name": "fn"
                                    }
                                ],
                                "longname": "module:Maybe~Maybe#map",
                                "name": "map",
                                "doclets": [],
                                "memberof": "module:Maybe~Maybe",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000080",
                                "description": "<p>map</p>",
                                "parentKind": "module",
                                "comment": "/**\n     * map\n     * @param {Function} fn\n     * @return {Maybe}\n     */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "*"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1569,
                                        1662
                                    ],
                                    "filename": "Maybe.js",
                                    "lineno": 74,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000753",
                                        "name": "Maybe#value",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "defaultValue"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "*"
                                            ]
                                        },
                                        "optional": true,
                                        "defaultvalue": null,
                                        "description": "<p>value that is Some</p>",
                                        "name": "defaultValue"
                                    }
                                ],
                                "longname": "module:Maybe~Maybe#value",
                                "name": "value",
                                "doclets": [],
                                "memberof": "module:Maybe~Maybe",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000081",
                                "description": "<p>Return the maybe's value if it is 'some' or else return <code>defaultValue</code></p>",
                                "parentKind": "module",
                                "comment": "/**\n     * Return the maybe's value if it is 'some' or else return `defaultValue`\n     * @param {*} [defaultValue = null] - value that is Some\n     * @return {*}\n     */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "Either"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1934,
                                        2051
                                    ],
                                    "filename": "Maybe.js",
                                    "lineno": 86,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000771",
                                        "name": "Maybe#toEither",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "leftValue"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "*"
                                            ]
                                        },
                                        "description": "<p>Value to place in the Left side</p>",
                                        "name": "leftValue"
                                    }
                                ],
                                "longname": "module:Maybe~Maybe~toEither",
                                "name": "toEither",
                                "doclets": [],
                                "memberof": "module:Maybe~Maybe",
                                "scope": "inner",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000082",
                                "description": "<p>Change the Maybe to an Either. If <code>Some</code> the value is placed in <code>Right</code>\nif <code>None</code> the value of <code>leftValue</code> is placed in a <code>Left</code></p>",
                                "parentKind": "module",
                                "comment": "/**\n     * Change the Maybe to an Either. If `Some` the value is placed in `Right`\n     * if `None` the value of `leftValue` is placed in a `Left`\n     *\n     * @inner\n     * @param {*} leftValue - Value to place in the Left side\n     * @return {Either}\n     */"
                            }
                        ],
                        "memberof": "module:Maybe",
                        "scope": "inner",
                        "kind": "class",
                        "___s": true,
                        "___id": "T000002R000074",
                        "description": "<p>Maybe constructor</p>",
                        "parentKind": "module",
                        "comment": "/**\n * Maybe class\n */"
                    },
                    {
                        "meta": {
                            "range": [
                                2384,
                                2446
                            ],
                            "filename": "Maybe.js",
                            "lineno": 109,
                            "path": "/Users/allanhortle/localhost/code/fronads/src",
                            "code": {
                                "id": "astnode100000820",
                                "name": "Some",
                                "type": "FunctionDeclaration",
                                "paramnames": [
                                    "value"
                                ]
                            }
                        },
                        "params": [],
                        "longname": "module:Maybe~Some",
                        "examples": [
                            "var person = Some({\n    name: \"Derek Tibbs\",\n    child: Some({\n        name: \"Derek Tibbs Jr\"\n    })\n});"
                        ],
                        "name": "Some",
                        "doclets": [],
                        "memberof": "module:Maybe",
                        "scope": "inner",
                        "kind": "function",
                        "___s": true,
                        "___id": "T000002R000085",
                        "description": "<p>Creates a new Maybe as 'Some' value</p>",
                        "parentKind": "module",
                        "comment": "/**\n * Creates a new Maybe as 'Some' value\n * @example\n * var person = Some({\n *     name: \"Derek Tibbs\",\n *     child: Some({\n *         name: \"Derek Tibbs Jr\"\n *     })\n * });\n */"
                    },
                    {
                        "meta": {
                            "range": [
                                2589,
                                2646
                            ],
                            "filename": "Maybe.js",
                            "lineno": 122,
                            "path": "/Users/allanhortle/localhost/code/fronads/src",
                            "code": {
                                "id": "astnode100000829",
                                "name": "None",
                                "type": "FunctionDeclaration",
                                "paramnames": []
                            }
                        },
                        "params": [],
                        "longname": "module:Maybe~None",
                        "examples": [
                            "var person = Some({\n    name: \"Derek Tibbs\",\n    child: None()\n});"
                        ],
                        "name": "None",
                        "doclets": [],
                        "memberof": "module:Maybe",
                        "scope": "inner",
                        "kind": "function",
                        "___s": true,
                        "___id": "T000002R000086",
                        "description": "<p>Creates a new Maybe as 'None' value</p>",
                        "parentKind": "module",
                        "comment": "/**\n * Creates a new Maybe as 'None' value\n *\n * @example\n * var person = Some({\n *     name: \"Derek Tibbs\",\n *     child: None()\n * });\n */"
                    },
                    {
                        "meta": {
                            "range": [
                                2767,
                                2843
                            ],
                            "filename": "Maybe.js",
                            "lineno": 132,
                            "path": "/Users/allanhortle/localhost/code/fronads/src",
                            "code": {
                                "id": "astnode100000837",
                                "name": "Perhaps",
                                "type": "FunctionDeclaration",
                                "paramnames": [
                                    "value"
                                ]
                            }
                        },
                        "params": [],
                        "longname": "module:Maybe~Perhaps",
                        "examples": [
                            "var person = Perhaps(possibleNullValue);"
                        ],
                        "name": "Perhaps",
                        "doclets": [],
                        "memberof": "module:Maybe",
                        "scope": "inner",
                        "kind": "function",
                        "___s": true,
                        "___id": "T000002R000087",
                        "description": "<p>Create a new Maybe where the value is uncertain.</p>",
                        "parentKind": "module",
                        "comment": "/**\n * Create a new Maybe where the value is uncertain.\n *\n * @example\n * var person = Perhaps(possibleNullValue);\n */"
                    }
                ],
                "kind": "module",
                "___s": true,
                "___id": "T000002R000064",
                "description": "<p>Maybe is a way to represent null values. It is either <code>Some</code> or it is <code>None</code>.</p>\n<ul>\n<li><a href=\"#module:Maybe~Some\">Some</a></li>\n<li><a href=\"#module:Maybe~None\">None</a></li>\n</ul>",
                "comment": "/**\n * Maybe is a way to represent null values. It is either `Some` or it is `None`.\n * * [Some](#module:Maybe~Some)\n * * [None](#module:Maybe~None)\n * @module Maybe\n */"
            },
            {
                "meta": {
                    "range": [
                        326,
                        879
                    ],
                    "filename": "RequestState.js",
                    "lineno": 14,
                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                    "code": {}
                },
                "longname": "module:RequestState",
                "name": "RequestState",
                "doclets": [
                    {
                        "meta": {
                            "range": [
                                911,
                                3074
                            ],
                            "filename": "RequestState.js",
                            "lineno": 29,
                            "path": "/Users/allanhortle/localhost/code/fronads/src",
                            "code": {
                                "id": "astnode100000900",
                                "name": "RequestState",
                                "type": "ClassDeclaration",
                                "paramnames": [
                                    "value",
                                    "isFetching",
                                    "isError",
                                    "isSuccess"
                                ]
                            }
                        },
                        "params": [
                            {
                                "type": {
                                    "names": [
                                        "any"
                                    ]
                                },
                                "name": "value"
                            },
                            {
                                "type": {
                                    "names": [
                                        "boolean"
                                    ]
                                },
                                "name": "isFetching"
                            },
                            {
                                "type": {
                                    "names": [
                                        "boolean"
                                    ]
                                },
                                "name": "isError"
                            },
                            {
                                "type": {
                                    "names": [
                                        "boolean"
                                    ]
                                },
                                "name": "isSuccess"
                            }
                        ],
                        "longname": "module:RequestState~RequestState",
                        "classdesc": "<p>RequestState class</p>",
                        "name": "RequestState",
                        "doclets": [
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "RequestState"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1359,
                                        1437
                                    ],
                                    "filename": "RequestState.js",
                                    "lineno": 50,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000935",
                                        "name": "RequestState#map",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "fn"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "any"
                                            ]
                                        },
                                        "name": "fn"
                                    }
                                ],
                                "longname": "module:RequestState~RequestState#map",
                                "name": "map",
                                "doclets": [],
                                "memberof": "module:RequestState~RequestState",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000102",
                                "description": "<p>map</p>",
                                "parentKind": "module",
                                "comment": "/**\n   * map\n   * @param {any} fn\n   * @return {RequestState}\n   */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "any"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1511,
                                        1577
                                    ],
                                    "filename": "RequestState.js",
                                    "lineno": 59,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000953",
                                        "name": "RequestState#flatMap",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "fn"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "function"
                                            ]
                                        },
                                        "name": "fn"
                                    }
                                ],
                                "longname": "module:RequestState~RequestState#flatMap",
                                "name": "flatMap",
                                "doclets": [],
                                "memberof": "module:RequestState~RequestState",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000103",
                                "description": "<p>flatMap</p>",
                                "parentKind": "module",
                                "comment": "/**\n   * flatMap\n   * @param {Function} fn\n   * @return {any}\n   */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "RequestState"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1664,
                                        1752
                                    ],
                                    "filename": "RequestState.js",
                                    "lineno": 68,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000969",
                                        "name": "RequestState#fetchingMap",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "fn"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "function"
                                            ]
                                        },
                                        "name": "fn"
                                    }
                                ],
                                "longname": "module:RequestState~RequestState#fetchingMap",
                                "name": "fetchingMap",
                                "doclets": [],
                                "memberof": "module:RequestState~RequestState",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000104",
                                "description": "<p>fetchingMap</p>",
                                "parentKind": "module",
                                "comment": "/**\n   * fetchingMap\n   * @param {Function} fn\n   * @return {RequestState}\n   */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "RequestState"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1843,
                                        1918
                                    ],
                                    "filename": "RequestState.js",
                                    "lineno": 77,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000987",
                                        "name": "RequestState#fetchingFlatMap",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "fn"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "function"
                                            ]
                                        },
                                        "name": "fn"
                                    }
                                ],
                                "longname": "module:RequestState~RequestState#fetchingFlatMap",
                                "name": "fetchingFlatMap",
                                "doclets": [],
                                "memberof": "module:RequestState~RequestState",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000105",
                                "description": "<p>fetchingFlatMap</p>",
                                "parentKind": "module",
                                "comment": "/**\n   * fetchingFlatMap\n   * @param {Function} fn\n   * @return {RequestState}\n   */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "RequestState"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        2002,
                                        2081
                                    ],
                                    "filename": "RequestState.js",
                                    "lineno": 86,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100001003",
                                        "name": "RequestState#errorMap",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "fn"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "function"
                                            ]
                                        },
                                        "name": "fn"
                                    }
                                ],
                                "longname": "module:RequestState~RequestState#errorMap",
                                "name": "errorMap",
                                "doclets": [],
                                "memberof": "module:RequestState~RequestState",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000106",
                                "description": "<p>errorMap</p>",
                                "parentKind": "module",
                                "comment": "/**\n   * errorMap\n   * @param {Function} fn\n   * @return {RequestState}\n   */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "RequestState"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        2169,
                                        2238
                                    ],
                                    "filename": "RequestState.js",
                                    "lineno": 95,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100001021",
                                        "name": "RequestState#errorFlatMap",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "fn"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "function"
                                            ]
                                        },
                                        "name": "fn"
                                    }
                                ],
                                "longname": "module:RequestState~RequestState#errorFlatMap",
                                "name": "errorFlatMap",
                                "doclets": [],
                                "memberof": "module:RequestState~RequestState",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000107",
                                "description": "<p>errorFlatMap</p>",
                                "parentKind": "module",
                                "comment": "/**\n   * errorFlatMap\n   * @param {Function} fn\n   * @return {RequestState}\n   */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "RequestState"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        2298,
                                        2354
                                    ],
                                    "filename": "RequestState.js",
                                    "lineno": 103,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100001037",
                                        "name": "RequestState#toFetching",
                                        "type": "MethodDefinition",
                                        "paramnames": []
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [],
                                "longname": "module:RequestState~RequestState#toFetching",
                                "name": "toFetching",
                                "doclets": [],
                                "memberof": "module:RequestState~RequestState",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000108",
                                "description": "<p>toFetching</p>",
                                "parentKind": "module",
                                "comment": "/**\n   * toFetching\n   * @return {RequestState}\n   */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "RequestState"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        2411,
                                        2461
                                    ],
                                    "filename": "RequestState.js",
                                    "lineno": 111,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100001047",
                                        "name": "RequestState#toError",
                                        "type": "MethodDefinition",
                                        "paramnames": []
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [],
                                "longname": "module:RequestState~RequestState#toError",
                                "name": "toError",
                                "doclets": [],
                                "memberof": "module:RequestState~RequestState",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000109",
                                "description": "<p>toError</p>",
                                "parentKind": "module",
                                "comment": "/**\n   * toError\n   * @return {RequestState}\n   */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "RequestState"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        2520,
                                        2574
                                    ],
                                    "filename": "RequestState.js",
                                    "lineno": 119,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100001057",
                                        "name": "RequestState#toSuccess",
                                        "type": "MethodDefinition",
                                        "paramnames": []
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [],
                                "longname": "module:RequestState~RequestState#toSuccess",
                                "name": "toSuccess",
                                "doclets": [],
                                "memberof": "module:RequestState~RequestState",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000110",
                                "description": "<p>toSuccess</p>",
                                "parentKind": "module",
                                "comment": "/**\n   * toSuccess\n   * @return {RequestState}\n   */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "RequestState"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        2631,
                                        2673
                                    ],
                                    "filename": "RequestState.js",
                                    "lineno": 127,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100001067",
                                        "name": "RequestState#toEmpty",
                                        "type": "MethodDefinition",
                                        "paramnames": []
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [],
                                "longname": "module:RequestState~RequestState#toEmpty",
                                "name": "toEmpty",
                                "doclets": [],
                                "memberof": "module:RequestState~RequestState",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000111",
                                "description": "<p>toEmpty</p>",
                                "parentKind": "module",
                                "comment": "/**\n   * toEmpty\n   * @return {RequestState}\n   */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "Either"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        2835,
                                        2915
                                    ],
                                    "filename": "RequestState.js",
                                    "lineno": 135,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100001074",
                                        "name": "RequestState#toEither",
                                        "type": "MethodDefinition",
                                        "paramnames": []
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [],
                                "longname": "module:RequestState~RequestState#toEither",
                                "name": "toEither",
                                "doclets": [],
                                "memberof": "module:RequestState~RequestState",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000112",
                                "description": "<p>Convert the RequestState to an Either. RequestErrors will be turned into a <code>Left</code> everything else a will be a <code>Right</code>.</p>",
                                "parentKind": "module",
                                "comment": "/**\n   * Convert the RequestState to an Either. RequestErrors will be turned into a `Left` everything else a will be a `Right`.\n   * @return {Either}\n   */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "any"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        2992,
                                        3072
                                    ],
                                    "filename": "RequestState.js",
                                    "lineno": 144,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100001092",
                                        "name": "RequestState#value",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "defaultValue"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "any"
                                            ]
                                        },
                                        "name": "defaultValue"
                                    }
                                ],
                                "longname": "module:RequestState~RequestState#value",
                                "name": "value",
                                "doclets": [],
                                "memberof": "module:RequestState~RequestState",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000113",
                                "description": "<p>value</p>",
                                "parentKind": "module",
                                "comment": "/**\n   * value\n   * @param {any} defaultValue\n   * @return {any}\n   */"
                            }
                        ],
                        "memberof": "module:RequestState",
                        "scope": "inner",
                        "kind": "class",
                        "___s": true,
                        "___id": "T000002R000096",
                        "parentKind": "module",
                        "comment": "/**\n * RequestState class\n */"
                    },
                    {
                        "returns": [
                            {
                                "type": {
                                    "names": [
                                        "RequestState"
                                    ]
                                }
                            }
                        ],
                        "meta": {
                            "range": [
                                3343,
                                3424
                            ],
                            "filename": "RequestState.js",
                            "lineno": 155,
                            "path": "/Users/allanhortle/localhost/code/fronads/src",
                            "code": {
                                "id": "astnode100001114",
                                "name": "RequestEmpty",
                                "type": "FunctionDeclaration",
                                "paramnames": []
                            }
                        },
                        "params": [
                            {
                                "type": {
                                    "names": [
                                        "any"
                                    ]
                                },
                                "name": "value"
                            }
                        ],
                        "longname": "module:RequestState~RequestEmpty",
                        "name": "RequestEmpty",
                        "doclets": [],
                        "memberof": "module:RequestState",
                        "scope": "inner",
                        "kind": "function",
                        "___s": true,
                        "___id": "T000002R000115",
                        "description": "<p>Create an RequestState as a RequestEmpty value</p>",
                        "parentKind": "module",
                        "comment": "/**\n                                 * Create an RequestState as a RequestEmpty value\n                                 * @param {any} value\n                                 * @return {RequestState}\n                                 */"
                    },
                    {
                        "returns": [
                            {
                                "type": {
                                    "names": [
                                        "RequestState"
                                    ]
                                }
                            }
                        ],
                        "meta": {
                            "range": [
                                3534,
                                3623
                            ],
                            "filename": "RequestState.js",
                            "lineno": 164,
                            "path": "/Users/allanhortle/localhost/code/fronads/src",
                            "code": {
                                "id": "astnode100001124",
                                "name": "RequestFetching",
                                "type": "FunctionDeclaration",
                                "paramnames": [
                                    "value"
                                ]
                            }
                        },
                        "params": [
                            {
                                "type": {
                                    "names": [
                                        "any"
                                    ]
                                },
                                "name": "value"
                            }
                        ],
                        "longname": "module:RequestState~RequestFetching",
                        "name": "RequestFetching",
                        "doclets": [],
                        "memberof": "module:RequestState",
                        "scope": "inner",
                        "kind": "function",
                        "___s": true,
                        "___id": "T000002R000116",
                        "description": "<p>Create a RequestState as a RequestFetching value</p>",
                        "parentKind": "module",
                        "comment": "/**\n * Create a RequestState as a RequestFetching value\n * @param {any} value\n * @return {RequestState}\n */"
                    },
                    {
                        "returns": [
                            {
                                "type": {
                                    "names": [
                                        "RequestState"
                                    ]
                                }
                            }
                        ],
                        "meta": {
                            "range": [
                                3730,
                                3816
                            ],
                            "filename": "RequestState.js",
                            "lineno": 173,
                            "path": "/Users/allanhortle/localhost/code/fronads/src",
                            "code": {
                                "id": "astnode100001135",
                                "name": "RequestError",
                                "type": "FunctionDeclaration",
                                "paramnames": [
                                    "value"
                                ]
                            }
                        },
                        "params": [
                            {
                                "type": {
                                    "names": [
                                        "any"
                                    ]
                                },
                                "name": "value"
                            }
                        ],
                        "longname": "module:RequestState~RequestError",
                        "name": "RequestError",
                        "doclets": [],
                        "memberof": "module:RequestState",
                        "scope": "inner",
                        "kind": "function",
                        "___s": true,
                        "___id": "T000002R000117",
                        "description": "<p>Create a RequestState as a RequestError value</p>",
                        "parentKind": "module",
                        "comment": "/**\n * Create a RequestState as a RequestError value\n * @param {any} value\n * @return {RequestState}\n */"
                    },
                    {
                        "returns": [
                            {
                                "type": {
                                    "names": [
                                        "RequestState"
                                    ]
                                }
                            }
                        ],
                        "meta": {
                            "range": [
                                3925,
                                4013
                            ],
                            "filename": "RequestState.js",
                            "lineno": 182,
                            "path": "/Users/allanhortle/localhost/code/fronads/src",
                            "code": {
                                "id": "astnode100001146",
                                "name": "RequestSuccess",
                                "type": "FunctionDeclaration",
                                "paramnames": [
                                    "value"
                                ]
                            }
                        },
                        "params": [
                            {
                                "type": {
                                    "names": [
                                        "any"
                                    ]
                                },
                                "name": "value"
                            }
                        ],
                        "longname": "module:RequestState~RequestSuccess",
                        "name": "RequestSuccess",
                        "doclets": [],
                        "memberof": "module:RequestState",
                        "scope": "inner",
                        "kind": "function",
                        "___s": true,
                        "___id": "T000002R000118",
                        "description": "<p>Create a RequestState as a RequestSuccess value</p>",
                        "parentKind": "module",
                        "comment": "/**\n * Create a RequestState as a RequestSuccess value\n * @param {any} value\n * @return {RequestState}\n */"
                    }
                ],
                "kind": "module",
                "___s": true,
                "___id": "T000002R000088",
                "description": "<p>RequestState is used to hold the four part relationship of an asynchronous request.\nIt is like a four way version of an Either. Instead of Left and Right the RequestState\ncan be either be empty, fetching, an error or a success. These states are represented through the identites:</p>\n<ul>\n<li><a href=\"#module:RequestState~RequestEmpty\">RequestEmpty</a></li>\n<li><a href=\"#module:RequestState~RequestFetching\">RequestFetching</a></li>\n<li><a href=\"#module:RequestState~RequestError\">RequestError</a></li>\n<li><a href=\"#module:RequestState~RequestSuccess\">RequestSuccess</a></li>\n</ul>",
                "comment": "/**\n * RequestState is used to hold the four part relationship of an asynchronous request.\n * It is like a four way version of an Either. Instead of Left and Right the RequestState\n * can be either be empty, fetching, an error or a success. These states are represented through the identites:\n * * [RequestEmpty](#module:RequestState~RequestEmpty)\n * * [RequestFetching](#module:RequestState~RequestFetching)\n * * [RequestError](#module:RequestState~RequestError)\n * * [RequestSuccess](#module:RequestState~RequestSuccess)\n *\n * @module RequestState\n */"
            }
        ]
    },
    "class": {
        "heading": "Classes",
        "doclets": [
            {
                "meta": {
                    "range": [
                        674,
                        1849
                    ],
                    "filename": "StateFunctor.js",
                    "lineno": 30,
                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                    "code": {
                        "id": "astnode100001263",
                        "name": "StateFunctor",
                        "type": "ClassDeclaration",
                        "paramnames": [
                            "value",
                            "stateBooleans"
                        ]
                    }
                },
                "params": [
                    {
                        "type": {
                            "names": [
                                "*"
                            ]
                        },
                        "description": "<p>The value to store</p>",
                        "name": "value"
                    },
                    {
                        "type": {
                            "names": [
                                "boolean"
                            ]
                        },
                        "description": "<p>Whether or not the maybe is <code>some</code> or <code>none</code></p>",
                        "name": "isSome"
                    }
                ],
                "longname": "StateFunctor",
                "classdesc": "<p>Maybe class</p>",
                "name": "StateFunctor",
                "doclets": [],
                "scope": "global",
                "kind": "class",
                "___s": true,
                "___id": "T000002R000131",
                "description": "<p>Maybe constructor</p>",
                "comment": "/**\n * Maybe class\n */"
            }
        ]
    }
}