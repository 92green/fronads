{
    "module": {
        "heading": "Modules",
        "doclets": [
            {
                "meta": {
                    "range": [
                        219,
                        340
                    ],
                    "filename": "Either.js",
                    "lineno": 13,
                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                    "code": {}
                },
                "longname": "module:Either",
                "name": "Either",
                "doclets": [
                    {
                        "returns": [
                            {
                                "type": {
                                    "names": [
                                        "Either"
                                    ]
                                }
                            }
                        ],
                        "meta": {
                            "range": [
                                2397,
                                2458
                            ],
                            "filename": "Either.js",
                            "lineno": 128,
                            "path": "/Users/allanhortle/localhost/code/fronads/src",
                            "code": {
                                "id": "astnode100000237",
                                "name": "Right",
                                "type": "FunctionDeclaration",
                                "paramnames": [
                                    "value"
                                ]
                            }
                        },
                        "params": [
                            {
                                "type": {
                                    "names": [
                                        "any"
                                    ]
                                },
                                "name": "value"
                            }
                        ],
                        "longname": "module:Either~Right",
                        "name": "Right",
                        "doclets": [],
                        "memberof": "module:Either",
                        "scope": "inner",
                        "kind": "function",
                        "___s": true,
                        "___id": "T000002R000023",
                        "description": "<p>Create an Either as a Right value</p>",
                        "parentKind": "module",
                        "comment": "/**\n * Create an Either as a Right value\n * @param {any} value\n * @return {Either}\n */"
                    },
                    {
                        "returns": [
                            {
                                "type": {
                                    "names": [
                                        "Either"
                                    ]
                                }
                            }
                        ],
                        "meta": {
                            "range": [
                                2546,
                                2607
                            ],
                            "filename": "Either.js",
                            "lineno": 137,
                            "path": "/Users/allanhortle/localhost/code/fronads/src",
                            "code": {
                                "id": "astnode100000246",
                                "name": "Left",
                                "type": "FunctionDeclaration",
                                "paramnames": [
                                    "value"
                                ]
                            }
                        },
                        "params": [
                            {
                                "type": {
                                    "names": [
                                        "any"
                                    ]
                                },
                                "name": "value"
                            }
                        ],
                        "longname": "module:Either~Left",
                        "name": "Left",
                        "doclets": [],
                        "memberof": "module:Either",
                        "scope": "inner",
                        "kind": "function",
                        "___s": true,
                        "___id": "T000002R000024",
                        "description": "<p>Create an Either as a Left value</p>",
                        "parentKind": "module",
                        "comment": "/**\n * Create an Either as a Left value\n * @param {any} value\n * @return {Either}\n */"
                    },
                    {
                        "returns": [
                            {
                                "type": {
                                    "names": [
                                        "Either"
                                    ]
                                }
                            }
                        ],
                        "meta": {
                            "range": [
                                2830,
                                2953
                            ],
                            "filename": "Either.js",
                            "lineno": 148,
                            "path": "/Users/allanhortle/localhost/code/fronads/src",
                            "code": {
                                "id": "astnode100000255",
                                "name": "Try",
                                "type": "FunctionDeclaration",
                                "paramnames": [
                                    "func"
                                ]
                            }
                        },
                        "params": [
                            {
                                "type": {
                                    "names": [
                                        "function"
                                    ]
                                },
                                "name": "func"
                            }
                        ],
                        "longname": "module:Either~Try",
                        "name": "Try",
                        "doclets": [],
                        "memberof": "module:Either",
                        "scope": "inner",
                        "kind": "function",
                        "___s": true,
                        "___id": "T000002R000025",
                        "description": "<p>Create a Try Either. <code>func</code> is immediately exceuted,\nif an error is thrown the Either will be Left(error) otherwise\nthe value of <code>func</code> is passed to a Right.</p>",
                        "parentKind": "module",
                        "comment": "/**\n * Create a Try Either. `func` is immediately exceuted,\n * if an error is thrown the Either will be Left(error) otherwise\n * the value of `func` is passed to a Right.\n * @param {Function} func\n * @return {Either}\n */"
                    }
                ],
                "kind": "module",
                "___s": true,
                "___id": "T000002R000008",
                "description": "<p>Either is monad that can hold a value of type <code>Left</code> or <code>Right</code>, but never at the same time.</p>",
                "comment": "/**\n * Either is monad that can hold a value of type `Left` or `Right`, but never at the same time.\n * @module Either\n */"
            },
            {
                "meta": {
                    "range": [
                        369,
                        538
                    ],
                    "filename": "Maybe.js",
                    "lineno": 17,
                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                    "code": {}
                },
                "longname": "module:Maybe",
                "name": "Maybe",
                "doclets": [
                    {
                        "meta": {
                            "range": [
                                563,
                                1927
                            ],
                            "filename": "Maybe.js",
                            "lineno": 27,
                            "path": "/Users/allanhortle/localhost/code/fronads/src",
                            "code": {
                                "id": "astnode100000347",
                                "name": "Maybe",
                                "type": "ClassDeclaration",
                                "paramnames": [
                                    "value",
                                    "isSome"
                                ]
                            }
                        },
                        "params": [
                            {
                                "type": {
                                    "names": [
                                        "*"
                                    ]
                                },
                                "description": "<p>The value to store</p>",
                                "name": "value"
                            },
                            {
                                "type": {
                                    "names": [
                                        "boolean"
                                    ]
                                },
                                "description": "<p>Whether or not the maybe is <code>some</code> or <code>none</code></p>",
                                "name": "isSome"
                            }
                        ],
                        "longname": "module:Maybe~Maybe",
                        "classdesc": "<p>Maybe class</p>",
                        "name": "Maybe",
                        "doclets": [
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "Either"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        921,
                                        962
                                    ],
                                    "filename": "Maybe.js",
                                    "lineno": 46,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000368",
                                        "name": "Maybe#unit",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "value"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "any"
                                            ]
                                        },
                                        "name": "value"
                                    }
                                ],
                                "longname": "module:Maybe~Maybe#unit",
                                "name": "unit",
                                "doclets": [],
                                "memberof": "module:Maybe~Maybe",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000041",
                                "description": "<p>Unit function</p>",
                                "parentKind": "module",
                                "comment": "/**\n   * Unit function\n   * @param {any} value\n   * @return {Either}\n   */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "Some"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1101,
                                        1164
                                    ],
                                    "filename": "Maybe.js",
                                    "lineno": 56,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000377",
                                        "name": "Maybe#flatMap",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "fn"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "function"
                                            ]
                                        },
                                        "description": "<p>perform a flatMap if Some</p>",
                                        "name": "fn"
                                    }
                                ],
                                "longname": "module:Maybe~Maybe#flatMap",
                                "name": "flatMap",
                                "doclets": [],
                                "memberof": "module:Maybe~Maybe",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000042",
                                "description": "<p>Perform a flatMap on the current maybe</p>",
                                "parentKind": "module",
                                "comment": "/**\n   * Perform a flatMap on the current maybe\n   *\n   * @param {Function} fn - perform a flatMap if Some\n   * @return {Some}\n   */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "Maybe"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1236,
                                        1305
                                    ],
                                    "filename": "Maybe.js",
                                    "lineno": 65,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000393",
                                        "name": "Maybe#map",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "fn"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "function"
                                            ]
                                        },
                                        "name": "fn"
                                    }
                                ],
                                "longname": "module:Maybe~Maybe#map",
                                "name": "map",
                                "doclets": [],
                                "memberof": "module:Maybe~Maybe",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000043",
                                "description": "<p>map</p>",
                                "parentKind": "module",
                                "comment": "/**\n   * map\n   * @param {Function} fn\n   * @return {Maybe}\n   */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "*"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1473,
                                        1560
                                    ],
                                    "filename": "Maybe.js",
                                    "lineno": 74,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000412",
                                        "name": "Maybe#value",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "defaultValue"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "*"
                                            ]
                                        },
                                        "optional": true,
                                        "defaultvalue": null,
                                        "description": "<p>value that is Some</p>",
                                        "name": "defaultValue"
                                    }
                                ],
                                "longname": "module:Maybe~Maybe#value",
                                "name": "value",
                                "doclets": [],
                                "memberof": "module:Maybe~Maybe",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000044",
                                "description": "<p>Return the maybe's value if it is 'some' or else return <code>defaultValue</code></p>",
                                "parentKind": "module",
                                "comment": "/**\n   * Return the maybe's value if it is 'some' or else return `defaultValue`\n   * @param {*} [defaultValue = null] - value that is Some\n   * @return {*}\n   */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "Either"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1814,
                                        1925
                                    ],
                                    "filename": "Maybe.js",
                                    "lineno": 86,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000430",
                                        "name": "Maybe#toEither",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "leftValue"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "*"
                                            ]
                                        },
                                        "description": "<p>Value to place in the Left side</p>",
                                        "name": "leftValue"
                                    }
                                ],
                                "longname": "module:Maybe~Maybe~toEither",
                                "name": "toEither",
                                "doclets": [],
                                "memberof": "module:Maybe~Maybe",
                                "scope": "inner",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000045",
                                "description": "<p>Change the Maybe to an Either. If <code>Some</code> the value is placed in <code>Right</code>\nif <code>None</code> the value of <code>leftValue</code> is placed in a <code>Left</code></p>",
                                "parentKind": "module",
                                "comment": "/**\n   * Change the Maybe to an Either. If `Some` the value is placed in `Right`\n   * if `None` the value of `leftValue` is placed in a `Left`\n   *\n   * @inner\n   * @param {*} leftValue - Value to place in the Left side\n   * @return {Either}\n   */"
                            }
                        ],
                        "memberof": "module:Maybe",
                        "scope": "inner",
                        "kind": "class",
                        "___s": true,
                        "___id": "T000002R000037",
                        "description": "<p>Maybe constructor</p>",
                        "parentKind": "module",
                        "comment": "/**\n * Maybe class\n */"
                    },
                    {
                        "meta": {
                            "range": [
                                2113,
                                2170
                            ],
                            "filename": "Maybe.js",
                            "lineno": 103,
                            "path": "/Users/allanhortle/localhost/code/fronads/src",
                            "code": {
                                "id": "astnode100000456",
                                "name": "Some",
                                "type": "FunctionDeclaration",
                                "paramnames": [
                                    "value"
                                ]
                            }
                        },
                        "params": [],
                        "longname": "module:Maybe~Some",
                        "examples": [
                            "var person = Some({\n    name: \"Derek Tibbs\",\n    child: Some({\n        name: \"Derek Tibbs Jr\"\n    })\n});"
                        ],
                        "name": "Some",
                        "doclets": [],
                        "memberof": "module:Maybe",
                        "scope": "inner",
                        "kind": "function",
                        "___s": true,
                        "___id": "T000002R000046",
                        "description": "<p>Creates a new Maybe as 'Some' value</p>",
                        "parentKind": "module",
                        "comment": "/**\n * Creates a new Maybe as 'Some' value\n * @example\n * var person = Some({\n *     name: \"Derek Tibbs\",\n *     child: Some({\n *         name: \"Derek Tibbs Jr\"\n *     })\n * });\n */"
                    },
                    {
                        "meta": {
                            "range": [
                                2313,
                                2365
                            ],
                            "filename": "Maybe.js",
                            "lineno": 116,
                            "path": "/Users/allanhortle/localhost/code/fronads/src",
                            "code": {
                                "id": "astnode100000465",
                                "name": "None",
                                "type": "FunctionDeclaration",
                                "paramnames": []
                            }
                        },
                        "params": [],
                        "longname": "module:Maybe~None",
                        "examples": [
                            "var person = Some({\n    name: \"Derek Tibbs\",\n    child: None()\n});"
                        ],
                        "name": "None",
                        "doclets": [],
                        "memberof": "module:Maybe",
                        "scope": "inner",
                        "kind": "function",
                        "___s": true,
                        "___id": "T000002R000047",
                        "description": "<p>Creates a new Maybe as 'None' value</p>",
                        "parentKind": "module",
                        "comment": "/**\n * Creates a new Maybe as 'None' value\n *\n * @example\n * var person = Some({\n *     name: \"Derek Tibbs\",\n *     child: None()\n * });\n */"
                    },
                    {
                        "meta": {
                            "range": [
                                2486,
                                2560
                            ],
                            "filename": "Maybe.js",
                            "lineno": 126,
                            "path": "/Users/allanhortle/localhost/code/fronads/src",
                            "code": {
                                "id": "astnode100000473",
                                "name": "Perhaps",
                                "type": "FunctionDeclaration",
                                "paramnames": [
                                    "value"
                                ]
                            }
                        },
                        "params": [],
                        "longname": "module:Maybe~Perhaps",
                        "examples": [
                            "var person = Perhaps(possibleNullValue);"
                        ],
                        "name": "Perhaps",
                        "doclets": [],
                        "memberof": "module:Maybe",
                        "scope": "inner",
                        "kind": "function",
                        "___s": true,
                        "___id": "T000002R000048",
                        "description": "<p>Create a new Maybe where the value is uncertain.</p>",
                        "parentKind": "module",
                        "comment": "/**\n * Create a new Maybe where the value is uncertain.\n *\n * @example\n * var person = Perhaps(possibleNullValue);\n */"
                    }
                ],
                "kind": "module",
                "___s": true,
                "___id": "T000002R000027",
                "description": "<p>Maybe is a way to represent null values. It is either <code>Some</code> or it is <code>None</code>.</p>\n<ul>\n<li><a href=\"#module:Maybe~Some\">Some</a></li>\n<li><a href=\"#module:Maybe~None\">None</a></li>\n</ul>",
                "comment": "/**\n * Maybe is a way to represent null values. It is either `Some` or it is `None`.\n * * [Some](#module:Maybe~Some)\n * * [None](#module:Maybe~None)\n * @module Maybe\n */"
            },
            {
                "meta": {
                    "range": [
                        291,
                        844
                    ],
                    "filename": "RequestState.js",
                    "lineno": 13,
                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                    "code": {}
                },
                "longname": "module:RequestState",
                "name": "RequestState",
                "doclets": [
                    {
                        "meta": {
                            "range": [
                                876,
                                2797
                            ],
                            "filename": "RequestState.js",
                            "lineno": 28,
                            "path": "/Users/allanhortle/localhost/code/fronads/src",
                            "code": {
                                "id": "astnode100000540",
                                "name": "RequestState",
                                "type": "ClassDeclaration",
                                "paramnames": [
                                    "value",
                                    "isFetching",
                                    "isError",
                                    "isSuccess"
                                ]
                            }
                        },
                        "params": [
                            {
                                "type": {
                                    "names": [
                                        "any"
                                    ]
                                },
                                "name": "value"
                            },
                            {
                                "type": {
                                    "names": [
                                        "boolean"
                                    ]
                                },
                                "name": "isFetching"
                            },
                            {
                                "type": {
                                    "names": [
                                        "boolean"
                                    ]
                                },
                                "name": "isError"
                            },
                            {
                                "type": {
                                    "names": [
                                        "boolean"
                                    ]
                                },
                                "name": "isSuccess"
                            }
                        ],
                        "longname": "module:RequestState~RequestState",
                        "classdesc": "<p>RequestState class</p>",
                        "name": "RequestState",
                        "doclets": [
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "RequestState"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1324,
                                        1402
                                    ],
                                    "filename": "RequestState.js",
                                    "lineno": 49,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000575",
                                        "name": "RequestState#map",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "fn"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "any"
                                            ]
                                        },
                                        "name": "fn"
                                    }
                                ],
                                "longname": "module:RequestState~RequestState#map",
                                "name": "map",
                                "doclets": [],
                                "memberof": "module:RequestState~RequestState",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000063",
                                "description": "<p>map</p>",
                                "parentKind": "module",
                                "comment": "/**\n   * map\n   * @param {any} fn\n   * @return {RequestState}\n   */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "any"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1476,
                                        1542
                                    ],
                                    "filename": "RequestState.js",
                                    "lineno": 58,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000593",
                                        "name": "RequestState#flatMap",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "fn"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "function"
                                            ]
                                        },
                                        "name": "fn"
                                    }
                                ],
                                "longname": "module:RequestState~RequestState#flatMap",
                                "name": "flatMap",
                                "doclets": [],
                                "memberof": "module:RequestState~RequestState",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000064",
                                "description": "<p>flatMap</p>",
                                "parentKind": "module",
                                "comment": "/**\n   * flatMap\n   * @param {Function} fn\n   * @return {any}\n   */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "RequestState"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1629,
                                        1717
                                    ],
                                    "filename": "RequestState.js",
                                    "lineno": 67,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000609",
                                        "name": "RequestState#fetchingMap",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "fn"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "function"
                                            ]
                                        },
                                        "name": "fn"
                                    }
                                ],
                                "longname": "module:RequestState~RequestState#fetchingMap",
                                "name": "fetchingMap",
                                "doclets": [],
                                "memberof": "module:RequestState~RequestState",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000065",
                                "description": "<p>fetchingMap</p>",
                                "parentKind": "module",
                                "comment": "/**\n   * fetchingMap\n   * @param {Function} fn\n   * @return {RequestState}\n   */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "RequestState"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1808,
                                        1883
                                    ],
                                    "filename": "RequestState.js",
                                    "lineno": 76,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000627",
                                        "name": "RequestState#fetchingFlatMap",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "fn"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "function"
                                            ]
                                        },
                                        "name": "fn"
                                    }
                                ],
                                "longname": "module:RequestState~RequestState#fetchingFlatMap",
                                "name": "fetchingFlatMap",
                                "doclets": [],
                                "memberof": "module:RequestState~RequestState",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000066",
                                "description": "<p>fetchingFlatMap</p>",
                                "parentKind": "module",
                                "comment": "/**\n   * fetchingFlatMap\n   * @param {Function} fn\n   * @return {RequestState}\n   */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "RequestState"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        1967,
                                        2046
                                    ],
                                    "filename": "RequestState.js",
                                    "lineno": 85,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000643",
                                        "name": "RequestState#errorMap",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "fn"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "function"
                                            ]
                                        },
                                        "name": "fn"
                                    }
                                ],
                                "longname": "module:RequestState~RequestState#errorMap",
                                "name": "errorMap",
                                "doclets": [],
                                "memberof": "module:RequestState~RequestState",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000067",
                                "description": "<p>errorMap</p>",
                                "parentKind": "module",
                                "comment": "/**\n   * errorMap\n   * @param {Function} fn\n   * @return {RequestState}\n   */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "RequestState"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        2134,
                                        2203
                                    ],
                                    "filename": "RequestState.js",
                                    "lineno": 94,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000661",
                                        "name": "RequestState#errorFlatMap",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "fn"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "function"
                                            ]
                                        },
                                        "name": "fn"
                                    }
                                ],
                                "longname": "module:RequestState~RequestState#errorFlatMap",
                                "name": "errorFlatMap",
                                "doclets": [],
                                "memberof": "module:RequestState~RequestState",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000068",
                                "description": "<p>errorFlatMap</p>",
                                "parentKind": "module",
                                "comment": "/**\n   * errorFlatMap\n   * @param {Function} fn\n   * @return {RequestState}\n   */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "RequestState"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        2263,
                                        2319
                                    ],
                                    "filename": "RequestState.js",
                                    "lineno": 102,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000677",
                                        "name": "RequestState#toFetching",
                                        "type": "MethodDefinition",
                                        "paramnames": []
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [],
                                "longname": "module:RequestState~RequestState#toFetching",
                                "name": "toFetching",
                                "doclets": [],
                                "memberof": "module:RequestState~RequestState",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000069",
                                "description": "<p>toFetching</p>",
                                "parentKind": "module",
                                "comment": "/**\n   * toFetching\n   * @return {RequestState}\n   */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "RequestState"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        2376,
                                        2426
                                    ],
                                    "filename": "RequestState.js",
                                    "lineno": 110,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000687",
                                        "name": "RequestState#toError",
                                        "type": "MethodDefinition",
                                        "paramnames": []
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [],
                                "longname": "module:RequestState~RequestState#toError",
                                "name": "toError",
                                "doclets": [],
                                "memberof": "module:RequestState~RequestState",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000070",
                                "description": "<p>toError</p>",
                                "parentKind": "module",
                                "comment": "/**\n   * toError\n   * @return {RequestState}\n   */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "RequestState"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        2485,
                                        2539
                                    ],
                                    "filename": "RequestState.js",
                                    "lineno": 118,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000697",
                                        "name": "RequestState#toSuccess",
                                        "type": "MethodDefinition",
                                        "paramnames": []
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [],
                                "longname": "module:RequestState~RequestState#toSuccess",
                                "name": "toSuccess",
                                "doclets": [],
                                "memberof": "module:RequestState~RequestState",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000071",
                                "description": "<p>toSuccess</p>",
                                "parentKind": "module",
                                "comment": "/**\n   * toSuccess\n   * @return {RequestState}\n   */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "RequestState"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        2596,
                                        2638
                                    ],
                                    "filename": "RequestState.js",
                                    "lineno": 126,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000707",
                                        "name": "RequestState#toEmpty",
                                        "type": "MethodDefinition",
                                        "paramnames": []
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [],
                                "longname": "module:RequestState~RequestState#toEmpty",
                                "name": "toEmpty",
                                "doclets": [],
                                "memberof": "module:RequestState~RequestState",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000072",
                                "description": "<p>toEmpty</p>",
                                "parentKind": "module",
                                "comment": "/**\n   * toEmpty\n   * @return {RequestState}\n   */"
                            },
                            {
                                "returns": [
                                    {
                                        "type": {
                                            "names": [
                                                "any"
                                            ]
                                        }
                                    }
                                ],
                                "meta": {
                                    "range": [
                                        2715,
                                        2795
                                    ],
                                    "filename": "RequestState.js",
                                    "lineno": 135,
                                    "path": "/Users/allanhortle/localhost/code/fronads/src",
                                    "code": {
                                        "id": "astnode100000714",
                                        "name": "RequestState#value",
                                        "type": "MethodDefinition",
                                        "paramnames": [
                                            "defaultValue"
                                        ]
                                    },
                                    "vars": {
                                        "": null
                                    }
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "any"
                                            ]
                                        },
                                        "name": "defaultValue"
                                    }
                                ],
                                "longname": "module:RequestState~RequestState#value",
                                "name": "value",
                                "doclets": [],
                                "memberof": "module:RequestState~RequestState",
                                "scope": "instance",
                                "kind": "function",
                                "___s": true,
                                "___id": "T000002R000073",
                                "description": "<p>value</p>",
                                "parentKind": "module",
                                "comment": "/**\n   * value\n   * @param {any} defaultValue\n   * @return {any}\n   */"
                            }
                        ],
                        "memberof": "module:RequestState",
                        "scope": "inner",
                        "kind": "class",
                        "___s": true,
                        "___id": "T000002R000057",
                        "parentKind": "module",
                        "comment": "/**\n * RequestState class\n */"
                    },
                    {
                        "returns": [
                            {
                                "type": {
                                    "names": [
                                        "RequestState"
                                    ]
                                }
                            }
                        ],
                        "meta": {
                            "range": [
                                3066,
                                3147
                            ],
                            "filename": "RequestState.js",
                            "lineno": 146,
                            "path": "/Users/allanhortle/localhost/code/fronads/src",
                            "code": {
                                "id": "astnode100000736",
                                "name": "RequestEmpty",
                                "type": "FunctionDeclaration",
                                "paramnames": []
                            }
                        },
                        "params": [
                            {
                                "type": {
                                    "names": [
                                        "any"
                                    ]
                                },
                                "name": "value"
                            }
                        ],
                        "longname": "module:RequestState~RequestEmpty",
                        "name": "RequestEmpty",
                        "doclets": [],
                        "memberof": "module:RequestState",
                        "scope": "inner",
                        "kind": "function",
                        "___s": true,
                        "___id": "T000002R000075",
                        "description": "<p>Create an RequestState as a RequestEmpty value</p>",
                        "parentKind": "module",
                        "comment": "/**\n                                 * Create an RequestState as a RequestEmpty value\n                                 * @param {any} value\n                                 * @return {RequestState}\n                                 */"
                    },
                    {
                        "returns": [
                            {
                                "type": {
                                    "names": [
                                        "RequestState"
                                    ]
                                }
                            }
                        ],
                        "meta": {
                            "range": [
                                3257,
                                3346
                            ],
                            "filename": "RequestState.js",
                            "lineno": 155,
                            "path": "/Users/allanhortle/localhost/code/fronads/src",
                            "code": {
                                "id": "astnode100000746",
                                "name": "RequestFetching",
                                "type": "FunctionDeclaration",
                                "paramnames": [
                                    "value"
                                ]
                            }
                        },
                        "params": [
                            {
                                "type": {
                                    "names": [
                                        "any"
                                    ]
                                },
                                "name": "value"
                            }
                        ],
                        "longname": "module:RequestState~RequestFetching",
                        "name": "RequestFetching",
                        "doclets": [],
                        "memberof": "module:RequestState",
                        "scope": "inner",
                        "kind": "function",
                        "___s": true,
                        "___id": "T000002R000076",
                        "description": "<p>Create a RequestState as a RequestFetching value</p>",
                        "parentKind": "module",
                        "comment": "/**\n * Create a RequestState as a RequestFetching value\n * @param {any} value\n * @return {RequestState}\n */"
                    },
                    {
                        "returns": [
                            {
                                "type": {
                                    "names": [
                                        "RequestState"
                                    ]
                                }
                            }
                        ],
                        "meta": {
                            "range": [
                                3453,
                                3539
                            ],
                            "filename": "RequestState.js",
                            "lineno": 164,
                            "path": "/Users/allanhortle/localhost/code/fronads/src",
                            "code": {
                                "id": "astnode100000757",
                                "name": "RequestError",
                                "type": "FunctionDeclaration",
                                "paramnames": [
                                    "value"
                                ]
                            }
                        },
                        "params": [
                            {
                                "type": {
                                    "names": [
                                        "any"
                                    ]
                                },
                                "name": "value"
                            }
                        ],
                        "longname": "module:RequestState~RequestError",
                        "name": "RequestError",
                        "doclets": [],
                        "memberof": "module:RequestState",
                        "scope": "inner",
                        "kind": "function",
                        "___s": true,
                        "___id": "T000002R000077",
                        "description": "<p>Create a RequestState as a RequestError value</p>",
                        "parentKind": "module",
                        "comment": "/**\n * Create a RequestState as a RequestError value\n * @param {any} value\n * @return {RequestState}\n */"
                    },
                    {
                        "returns": [
                            {
                                "type": {
                                    "names": [
                                        "RequestState"
                                    ]
                                }
                            }
                        ],
                        "meta": {
                            "range": [
                                3648,
                                3736
                            ],
                            "filename": "RequestState.js",
                            "lineno": 173,
                            "path": "/Users/allanhortle/localhost/code/fronads/src",
                            "code": {
                                "id": "astnode100000768",
                                "name": "RequestSuccess",
                                "type": "FunctionDeclaration",
                                "paramnames": [
                                    "value"
                                ]
                            }
                        },
                        "params": [
                            {
                                "type": {
                                    "names": [
                                        "any"
                                    ]
                                },
                                "name": "value"
                            }
                        ],
                        "longname": "module:RequestState~RequestSuccess",
                        "name": "RequestSuccess",
                        "doclets": [],
                        "memberof": "module:RequestState",
                        "scope": "inner",
                        "kind": "function",
                        "___s": true,
                        "___id": "T000002R000078",
                        "description": "<p>Create a RequestState as a RequestSuccess value</p>",
                        "parentKind": "module",
                        "comment": "/**\n * Create a RequestState as a RequestSuccess value\n * @param {any} value\n * @return {RequestState}\n */"
                    }
                ],
                "kind": "module",
                "___s": true,
                "___id": "T000002R000050",
                "description": "<p>RequestState is used to hold the four part relationship of an asynchronous request.\nIt is like a four way version of an Either. Instead of Left and Right the RequestState\ncan be either be empty, fetching, an error or a success. These states are represented through the identites:</p>\n<ul>\n<li><a href=\"#module:RequestState~RequestEmpty\">RequestEmpty</a></li>\n<li><a href=\"#module:RequestState~RequestFetching\">RequestFetching</a></li>\n<li><a href=\"#module:RequestState~RequestError\">RequestError</a></li>\n<li><a href=\"#module:RequestState~RequestSuccess\">RequestSuccess</a></li>\n</ul>",
                "comment": "/**\n * RequestState is used to hold the four part relationship of an asynchronous request.\n * It is like a four way version of an Either. Instead of Left and Right the RequestState\n * can be either be empty, fetching, an error or a success. These states are represented through the identites:\n * * [RequestEmpty](#module:RequestState~RequestEmpty)\n * * [RequestFetching](#module:RequestState~RequestFetching)\n * * [RequestError](#module:RequestState~RequestError)\n * * [RequestSuccess](#module:RequestState~RequestSuccess)\n *\n * @module RequestState\n */"
            }
        ]
    }
}